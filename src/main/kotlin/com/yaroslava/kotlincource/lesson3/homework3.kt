package com.yaroslava.kotlincource.lesson3

class homework3 {

    val event: String = "Hackathon"
    //Название мероприятия

    var dateEvent: Any = "05.07.2025"

        //дата мероприятия
    // может поменяться до окончательного утверждения, или перенестись

    private var place: String = "набережная, 7"
        //Место проведения

    lateinit var budget: String
    //Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.

    var participant: Int = 0
        get() = field
        private set(value) {field=value}
//Количество участников

    var duration: Long = 5*60*60
    //Длительность хакатона

   private lateinit var contactInfo: String
   //Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.

   var status: String = "Не начат"
    //Текущее состояние хакатона (статус)

   val sponsors: String = "список спонсоров.док"
    //Список спонсоров

    val budgetFull: Int = 50000
    //Бюджет мероприятия

    var internetAccess: Int = 0
    //Текущий уровень доступа к интернету

    private var interactionProcess: String = "ссылка на рабочий диск"
    //Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.

    var teamQuantity: Int = 0
    //Количество команд

    val tacks: String = "Задачи"
    //Перечень задач

    val evacuation: String = "План.пикча"
    //План эвакуации

    val availableEquipment: String = "45"
    //Список доступного оборудования

    var equipmentForUse: String = "45"
    //Список свободного оборудования

    lateinit var scheduleFood: String
    //График питания участников (зависит от поставщика питания, определяемого за неделю до начала)

    val planB: String = "ссылка на план"
    //План мероприятий на случай сбоев

    val experts: String = "жюри и эксперты"
    //Список экспертов и жюри

    val methods: String by lazy {""}
    //Методы и процедуры для сбора отзывов от участников и гостей, включая анонимные опросы и интервью.

    val confidPol: String = "текст политики конфиденциальности"
    //Политика конфиденциальности

    private val rewiews: String by lazy {""}
    //Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.

    var temperature: Double = 20.0
    //Текущая температура в помещении

    var state: String = "ссылка"
    //Мониторинг и анализ производительности сетевого оборудования и интернет-соединения.

    var light: Int = 1000
    //Уровень освещения

    private var log: String = "лог событий"
    //Лог событий мероприятия

    var ambulance: String = "не доступно"
    //Доступность медицинской помощи

    private val security: String = "протоколы и планы"
    //Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.

    val registerNumber: String = "1N654"
    //Регистрационный номер мероприятия

    val noize: Int = 500
    //Максимально допустимый уровень шума в помещении хакатона.

    var initialNoize: Boolean = true
    //Индикатор превышения уровня шума в помещениях

    lateinit var format: String
    //Формат мероприятия (зависит от геополитической обстановки)

    var availablePlace: Int = 15
        get() = field
        set(value!=0) {
            var value = 20
            field=value}
    //Количество свободных мест для отдыха (например, кресел или диванов), сеттер валидирует, чтобы количество не было меньше нуля.

    private val journalistPlan = String = "план"
    //План взаимодействия с прессой

    val project: String by lazy {""}
    //Детальная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.

    var permission: Boolean = true
    //Статус получения всех необходимых разрешений.Указывает, открыт ли доступ к эксклюзивным ресурсам (например, специальному оборудованию)

    val parthers: String = "партнеры"
    //Список партнеров мероприятия

    val totalReport: String by lazy {""}
    //Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.

   private val: String = "система распределения"
    //План распределения призов

    private val contactEmergency: String = "список контактов"
    //Контактная информация экстренных служб, медицинского персонала и других важных служб, недоступная участникам.

    var terms: String = "special terms"
    //Особые условия для участников с ограниченными возможностями

    val mood: String by lazy { "" }
    //Общее настроение участников (определяется опросами)

    lateinit var fullPlan: String
    //Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия.

    lateinit var specialGuest: String
    //Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия.

    val sumPeople: Int = 1020
//Максимальное количество людей, которое может вместить место проведения.

val duration: Int = 180
//Стандартное количество часов, отведенное каждой команде для работы над проектом.



}